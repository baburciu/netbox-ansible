# ======= How to run standalone:
# boburciu@WX-5CG020BDT2: ~$ cd ~/netbox-ansible-automation
# boburciu@WX-5CG020BDT2:~/netbox-ansible-automation$ ansible-playbook -i ./hosts -v create_device.yml -e 'device_hw_set_id="CE6800-HI"'

- name: Create device (its manufacturer, type & role previously created) and assign to it a mgmt interface w IP address
  connection: local
  hosts: docker_netbox_19216820023
  gather_facts: False
  collections:
    - netbox.netbox 
  tasks:
    # - include_vars: external_vars_blade.yml  

    # - name: Create manufacturer within Netbox with only required information
    #   netbox_manufacturer:
    #     netbox_url: '{{ url_var }}'
    #     netbox_token: '{{ token_var }}'
    #     data:
    #       name: '{{ device_manufacturer_name }}'
    #     state: present    

    # - name: Create device type within Netbox with only required information
    #   netbox_device_type:
    #     netbox_url: '{{ url_var }}'
    #     netbox_token: '{{ token_var }}'
    #     data:
    #       slug: '{{ device_hw_set_id }}'   # to be used as device_type for the device object, identifies all these hardware params under netbox_device_type
    #       manufacturer: '{{ device_manufacturer_name }}'        
    #       model: '{{ device_model }}' 
    #       part_number: '{{ device_part_number }}' 
    #       u_height: '{{ device_u_height }}' 
    #       is_full_depth: '{{ device_is_full_depth }}' 
    #       subdevice_role: '{{ device_subdevice_role }}' 
    #     state: present

    # - name: Create device role within Netbox with only required information
    #   netbox_device_role:
    #     netbox_url: '{{ url_var }}'
    #     netbox_token: '{{ token_var }}'
    #     data:
    #       name: '{{ device_role_name }}'
    #       color: '{{ device_role_color }}'
    #     state: present
  
    - name: Create device for non-blade server systems 
      netbox_device:
        netbox_url: '{{ url_var }}'
        netbox_token: '{{ token_var }}'
        data:
          name:  '{{ device_hostname }}'  
          device_type: '{{ device_hw_set_id }}'           
          device_role: '{{ device_role_name }}'
          site: '{{ device_site }}'   # must be created prior (different playbook)
          face: '{{ device_face }}'
          rack: '{{ device_rack_name }}'   # must be created prior (different playbook) 
          position:  '{{ device_position_in_rack }}'
          tenant: '{{ device_tenant }}'  
          # primary_ip4: '{{ device_primary_ip4 }}'   # must be created prior (different playbook)
          serial: '{{ device_serial }}'    
          comments: '{{ device_comments }}'  
          tags:
            - '{{ device_tag }}' 
        state: present
      when:
        - device_subdevice_role == 'parent'
        - device_subdevice_role is defined

    - name: Create device of type blade server
      netbox_device:
        netbox_url: '{{ url_var }}'
        netbox_token: '{{ token_var }}'
        data:
          name:  '{{ device_hostname }}'  
          device_type: '{{ device_hw_set_id }}'           
          device_role: '{{ device_role_name }}'
          site: '{{ device_site }}'   # must be created prior (different playbook)
          rack: '{{ device_rack_name }}'   # must be created prior (different playbook) 
          tenant: '{{ device_tenant }}'  
          # primary_ip4: '{{ device_primary_ip4 }}'   # must be created prior (different playbook)
          serial: '{{ device_serial }}'    
          comments: '{{ device_comments }}'  
          tags:
            - '{{ device_tag }}' 
        state: present
      when:
        - device_subdevice_role == 'child'
        - device_subdevice_role is defined

    - name: Update device with mgmt interface primary IP address
      netbox_device:
        netbox_url: '{{ url_var }}'
        netbox_token: '{{ token_var }}'
        data:
          name:  '{{ device_hostname }}'  
          primary_ip4: '{{ device_primary_ip4 }}'   # must be created prior (different playbook), so we'll ignore errors as long it is not
      ignore_errors: True
      when: device_primary_ip4 is defined

    - name: Add child device into device bay of parent
      netbox_device_bay:
        netbox_url: '{{ url_var }}'
        netbox_token: '{{ token_var }}'
        data:
          device: '{{ device_bay_chassis }}'    
          name: '{{ device_bay_slot }}'
          installed_device: '{{ device_hostname }}'  
        state: present 
      ignore_errors: True
      when:
        - device_subdevice_role == 'child'
        - device_subdevice_role is defined

    # - name:  Obtain all devices
    #   debug: 
    #     msg: '{{ item }}'  
    #   # debug: 
    #   #   msg: >      
    #   #     "{{ item.value.name }}"

    #   loop: "{{ query('netbox.netbox.nb_lookup', 'devices', 
    #                 api_endpoint=url_var,
    #                 token=token_var) }}"   