# ======= How to run standalone:
# boburciu@WX-5CG020BDT2: ~$ cd ~/netbox-ansible-automation
# boburciu@WX-5CG020BDT2:~/netbox-ansible-automation$ ansible-playbook -i ./hosts -v create_device_manufacturer_type_role.yml -e 'device_role_name="Firewall"'
# boburciu@WX-5CG020BDT2:~/netbox-ansible-automation$ ansible-playbook -i ./hosts -v create_device_manufacturer_type_role.yml -e 'external_vars="../parse_excel_servers/external_vars_CZ00CHASSIS1.yml"'

- name: Create device manufacturer and device role
  connection: local
  hosts: docker_netbox_19216820023
  gather_facts: False
  collections:
    - netbox.netbox 
  tasks:
    # - include_vars: external_vars_blade.yml  
    - include_vars: '{{external_vars}}'         

    - name: Create manufacturer within Netbox with only required information
      netbox_manufacturer:
        netbox_url: '{{ url_var }}'
        netbox_token: '{{ token_var }}'
        data:
          name: '{{ device_manufacturer_name }}'
        state: present    

    - name: Create device type within Netbox with only required information
      netbox_device_type:
        netbox_url: '{{ url_var }}'
        netbox_token: '{{ token_var }}'
        data:
          slug: '{{ device_hw_set_id }}'   # to be used as device_type for the device object, identifies all these hardware params under netbox_device_type
          manufacturer: '{{ device_manufacturer_name }}'        
          model: '{{ device_model }}' 
          part_number: '{{ device_part_number }}' 
          u_height: '{{ device_u_height }}' 
          is_full_depth: '{{ device_is_full_depth }}' 
          subdevice_role: '{{ device_subdevice_role }}' 
        state: present

    - name: Create device role within Netbox with only required information
      netbox_device_role:
        netbox_url: '{{ url_var }}'
        netbox_token: '{{ token_var }}'
        data:
          name: '{{ device_role_name }}'
          color: '{{ device_role_color }}'
        state: present
